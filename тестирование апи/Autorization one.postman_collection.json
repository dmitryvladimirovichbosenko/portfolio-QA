{
	"info": {
		"_postman_id": "4f682ade-5d39-40f5-9a8b-620549cf91ea",
		"name": "Autorization one",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40400818"
	},
	"item": [
		{
			"name": "Auth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 OK\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Token есть\", () => pm.expect(pm.response.json()).to.have.property(\"token\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"test\",\r\n  \"password\": \"test123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 Unauthorized\", () => pm.response.to.have.status(401));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"username\": \"wrong\", \"password\": \"wrong\" }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 OK\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response has user\", () => pm.expect(pm.response.json()).to.have.property(\"user\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "abc123",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "without token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 Unauthorized — no token\", () =>\r",
							"  pm.response.to.have.status(401)\r",
							");\r",
							"pm.test(\"Body error is 'No token provided'\", () =>\r",
							"  pm.expect(pm.response.json().error).to.eql(\"No token provided\")\r",
							");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET profile — wrong token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 Forbidden — invalid token\", () =>\r",
							"  pm.response.to.have.status(403)\r",
							");\r",
							"pm.test(\"Body error is 'Forbidden'\", () =>\r",
							"  pm.expect(pm.response.json().error).to.eql(\"Forbidden\")\r",
							");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer wrong-token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.sendRequest({\r",
					"  url: pm.environment.get(\"base_url\") + \"/auth\",\r",
					"  method: \"POST\",\r",
					"  header: { \"Content-Type\": \"application/json\" },\r",
					"  body: {\r",
					"    mode: \"raw\",\r",
					"    raw: JSON.stringify({ \"username\": \"test\", \"password\": \"test123\" })\r",
					"  }\r",
					"}, (err, res) => {\r",
					"  const json = res.json();\r",
					"  pm.environment.set(\"token\", json.token);\r",
					"});\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}